version: "3.7"
services:
  elasticsearch:
    image: elasticsearch:7.8.1
    container_name: elasticsearch_7
    restart: always
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - eCommerce-docker-network
    volumes:
      #      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      #      - ./elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
      - elastic:/usr/share/elasticsearch/data
#  kibana:
#    image: kibana:7.8.1
#    restart: always
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch_7:9200
#      ELASTICSEARCH_HOST: elasticsearch_7
#      ELASTICSEARCH_PORT: 9200
#    ports:
#      - "5601:5601"
#    networks:
#      - eCommerce-docker-network
  #    volumes:
  #      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
  redis:
    image: "redis:alpine"
    restart: always
    command: redis-server --requirepass d2f3db53e64ffddcfdf5c0f2cd36f95517356e9b
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - eCommerce-docker-network
  mongo:
    image: mongo
    container_name: mongodb_4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: $MONGO_INITDB_DATABASE
#      - MONGO_ADMIN_USERNAME=${MONGO_ADMIN_USERNAME}
#      - MONGO_ADMIN_PASSWORD=${MONGO_ADMIN_PASSWORD}
#      - MONGO_DBUSER=${MONGO_DBUSER}
#      - MONGO_DBUSER_PASSWORD=${MONGO_DBUSER_PASSWORD}
#      MONGO_DATABASE: $MONGO_INITDB_DATABASE
#      MONGODB_ROOT_PASSWORD
#      MONGODB_ADMIN_USER
#      MONGODB_ADMIN_PASS
#      MONGODB_USER
#      MONGODB_PASS
#    env_file:
#      - $PWD/.env
    ports:
      - 27017:27017
    volumes:
#      - $PWD/mongoConfig.sh:/docker-entrypoint-initdb.d/mongoConfig.sh
      - mongoData:/data/db
    networks:
      - eCommerce-docker-network


  #    command:
  #      - mongod --auth
  #      - /docker-entrypoint-initdb.d/startup_script.sh
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb_4
#      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 1
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_INITDB_ROOT_USERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
#
##    links:
##      - "mongo"
##    depends_on:
##      - mongo
#    networks:
#      - eCommerce-docker-network

networks:
  eCommerce-docker-network:
    external: true
volumes:
  elastic:
    driver: local
  mongoData:
    driver: local


#docker-compose-restart(){
#  docker-compose stop $@
#  docker-compose rm -f -v $@
#  docker-compose create --force-recreate $@
#  docker-compose start $@
#}
